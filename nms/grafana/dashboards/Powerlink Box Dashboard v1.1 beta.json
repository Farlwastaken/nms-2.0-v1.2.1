{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P3C147723CB20F3EF"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 7,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "initial": {
          "code": "console.log(context.panel.data, context.panel.response, context.panel.initial, context.panel.elements);\n\nreturn;\n\n/**\n * Data Source\n * Requires form elements to be defined\n */\nconst dataQuery = context.utils.toDataQueryResponse(context.panel.response);\nconsole.log(dataQuery);",
          "contentType": "application/json",
          "getPayload": "return {}",
          "highlight": true,
          "highlightColor": "red",
          "method": "-",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [],
          "variant": "split"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "hidden"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.refresh();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "okta",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.refresh();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "contentType": "application/json",
          "getPayload": "const payload =\n{\n  \"message\": \"${message}\"\n};\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n  payload[element.id] = element.value;\n})\nreturn payload;",
          "header": [],
          "method": "POST",
          "payload": {},
          "payloadMode": "custom",
          "url": "http://python:5000/grafana-command"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "5.1.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P3C147723CB20F3EF"
          },
          "groupBy": [],
          "measurement": "smartBox_ea3778399e77eeb4b1de318552b18d24",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"response_message_fan_0_fanSpeed\") FROM \"smartBox_ea3778399e77eeb4b1de318552b18d24\" WHERE $timeFilter",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "response_message_fan_0_fanSpeed"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Send Command",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "type": "grafana-mqtt-datasource",
        "uid": "PFD60AF2508677EA1"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 5000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 3000
              },
              {
                "color": "red",
                "value": 4000
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 20,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 5,
      "interval": "2s",
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Fan Speed$/",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "aeeb4mnnbpy4gf"
          },
          "groupBy": [],
          "measurement": "smartBox_ea3778399e77eeb4b1de318552b18d24",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"response_message_fan_0_fanSpeed\") FROM \"smartBox_ea3778399e77eeb4b1de318552b18d24\" WHERE (\"topic\"::tag = 'sys/device/smartBox_ea3778399e77eeb4b1de318552b18d24/command_reply/slot7-state') AND time > now() - 5s",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "logs",
          "select": [
            [
              {
                "params": [
                  "response_message_fan_0_fanSpeed"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "topic::tag",
              "operator": "=",
              "value": "sys/device/smartBox_ea3778399e77eeb4b1de318552b18d24/command_reply/slot7-state"
            }
          ],
          "topic": "sys/device/smartBox_ea3778399e77eeb4b1de318552b18d24/command_reply/slot7-state"
        }
      ],
      "timeFrom": "now-5s",
      "title": "Fan Real-time Speed",
      "transformations": [
        {
          "id": "extractFields",
          "options": {
            "delimiter": ",",
            "format": "json",
            "jsonPaths": [
              {
                "alias": "Fan Speed",
                "path": "message.fan[0].fanSpeed"
              }
            ],
            "source": "response"
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "Fan Speed"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "grafana-mqtt-datasource",
        "uid": "PFD60AF2508677EA1"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 6,
      "options": {
        "dedupStrategy": "none",
        "enableInfiniteScrolling": false,
        "enableLogDetails": true,
        "prettifyLogMessage": true,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": true,
        "sortOrder": "Descending",
        "wrapLogMessage": true
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "hide": false,
          "refId": "A",
          "topic": "sys/#"
        }
      ],
      "title": "All messages will appear here",
      "transformations": [
        {
          "id": "filterByValue",
          "options": {
            "filters": [
              {
                "config": {
                  "id": "isNull",
                  "options": {}
                },
                "fieldName": "type"
              }
            ],
            "match": "any",
            "type": "exclude"
          }
        }
      ],
      "type": "logs"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Powerlink Box Dashboard",
  "uid": "ceea56zseq680e",
  "version": 1,
  "weekStart": ""
}